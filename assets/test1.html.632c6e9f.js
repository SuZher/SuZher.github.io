import{_ as n,o as s,c as a,a as t}from"./app.30d84a36.js";var e="/logo.jpg";const p={},o=t('<h2 id="\u5173\u4E8Evue\u4E0B\u7EC4\u4EF6\u5F15\u5165\u7B2C\u4E09\u65B9\u5916\u90E8\u5916\u94FEjs\u51E0\u79CD\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u5173\u4E8Evue\u4E0B\u7EC4\u4EF6\u5F15\u5165\u7B2C\u4E09\u65B9\u5916\u90E8\u5916\u94FEjs\u51E0\u79CD\u65B9\u5F0F" aria-hidden="true">#</a> \u5173\u4E8EVue\u4E0B\u7EC4\u4EF6\u5F15\u5165\u7B2C\u4E09\u65B9\u5916\u90E8\u5916\u94FEJs\u51E0\u79CD\u65B9\u5F0F</h2><p>https://blog.csdn.net/u010881899/article/details/80895661</p><h2 id="nginx\u4E00\u952E\u914D\u7F6E" tabindex="-1"><a class="header-anchor" href="#nginx\u4E00\u952E\u914D\u7F6E" aria-hidden="true">#</a> nginx\u4E00\u952E\u914D\u7F6E</h2><p>https://nginxconfig.io/</p><p><img src="'+e+`" alt=""></p><h2 id="lodash\u6309\u9700\u52A0\u8F7D" tabindex="-1"><a class="header-anchor" href="#lodash\u6309\u9700\u52A0\u8F7D" aria-hidden="true">#</a> lodash\u6309\u9700\u52A0\u8F7D</h2><p>https://www.jianshu.com/p/f03ff4f3a8b3</p><h2 id="threejs" tabindex="-1"><a class="header-anchor" href="#threejs" aria-hidden="true">#</a> threeJs</h2><h4 id="\u4E2D\u6587\u6559\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u4E2D\u6587\u6559\u7A0B" aria-hidden="true">#</a> \u4E2D\u6587\u6559\u7A0B</h4><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>This is a warning</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * Promise \u5B9E\u73B0 \u9075\u5FAApromise/A+\u89C4\u8303
 * Promise/A+\u89C4\u8303\u8BD1\u6587:
 * https://malcolmyu.github.io/2015/06/12/Promises-A-Plus/#note-4
 */</span>
<span class="token comment">// promise \u4E09\u4E2A\u72B6\u6001</span>
<span class="token keyword">const</span> <span class="token constant">PENDING</span> <span class="token operator">=</span> <span class="token string">&quot;pending&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">FULFILLED</span> <span class="token operator">=</span> <span class="token string">&quot;fulfilled&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">REJECTED</span> <span class="token operator">=</span> <span class="token string">&quot;rejected&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">Promise</span><span class="token punctuation">(</span><span class="token parameter">excutor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span> <span class="token comment">// \u7F13\u5B58\u5F53\u524Dpromise\u5B9E\u4F8B\u5BF9\u8C61</span>
    that<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">PENDING</span><span class="token punctuation">;</span> <span class="token comment">// \u521D\u59CB\u72B6\u6001</span>
    that<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span> <span class="token comment">// fulfilled\u72B6\u6001\u65F6 \u8FD4\u56DE\u7684\u4FE1\u606F</span>
    that<span class="token punctuation">.</span>reason <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span> <span class="token comment">// rejected\u72B6\u6001\u65F6 \u62D2\u7EDD\u7684\u539F\u56E0</span>
    that<span class="token punctuation">.</span>onFulfilledCallbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u5B58\u50A8fulfilled\u72B6\u6001\u5BF9\u5E94\u7684onFulfilled\u51FD\u6570</span>
    that<span class="token punctuation">.</span>onRejectedCallbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u5B58\u50A8rejected\u72B6\u6001\u5BF9\u5E94\u7684onRejected\u51FD\u6570</span>
    <span class="token keyword">function</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// value\u6210\u529F\u6001\u65F6\u63A5\u6536\u7684\u7EC8\u503C</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>value <span class="token keyword">instanceof</span> <span class="token class-name">Promise</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u4E3A\u4EC0\u4E48resolve \u52A0setTimeout?</span>
        <span class="token comment">// 2.2.4\u89C4\u8303 onFulfilled \u548C onRejected \u53EA\u5141\u8BB8\u5728 execution context \u6808\u4EC5\u5305\u542B\u5E73\u53F0\u4EE3\u7801\u65F6\u8FD0\u884C.</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u8C03\u7528resolve \u56DE\u8C03\u5BF9\u5E94onFulfilled\u51FD\u6570</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>that<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u53EA\u80FD\u7531pending\u72B6\u6001 =&gt; fulfilled\u72B6\u6001 (\u907F\u514D\u8C03\u7528\u591A\u6B21resolve reject)</span>
                that<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">FULFILLED</span><span class="token punctuation">;</span>
                that<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
                that<span class="token punctuation">.</span>onFulfilledCallbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">cb</span> <span class="token operator">=&gt;</span> <span class="token function">cb</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// reason\u5931\u8D25\u6001\u65F6\u63A5\u6536\u7684\u62D2\u56E0</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u8C03\u7528reject \u56DE\u8C03\u5BF9\u5E94onRejected\u51FD\u6570</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>that<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u53EA\u80FD\u7531pending\u72B6\u6001 =&gt; rejected\u72B6\u6001 (\u907F\u514D\u8C03\u7528\u591A\u6B21resolve reject)</span>
                that<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">REJECTED</span><span class="token punctuation">;</span>
                that<span class="token punctuation">.</span>reason <span class="token operator">=</span> reason<span class="token punctuation">;</span>
                that<span class="token punctuation">.</span>onRejectedCallbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">cb</span> <span class="token operator">=&gt;</span> <span class="token function">cb</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6355\u83B7\u5728excutor\u6267\u884C\u5668\u4E2D\u629B\u51FA\u7684\u5F02\u5E38</span>
    <span class="token comment">// new Promise((resolve, reject) =&gt; {</span>
    <span class="token comment">//     throw new Error(&#39;error in excutor&#39;)</span>
    <span class="token comment">// })</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">excutor</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),c=[o];function l(i,u){return s(),a("div",null,c)}var k=n(p,[["render",l],["__file","test1.html.vue"]]);export{k as default};
